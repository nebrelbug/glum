{"version":3,"file":"glum.min.js","sources":["../src/index.ts"],"sourcesContent":["interface NameMap {\n  [index: string]: string\n}\n\nexport default class Glum {\n  size: number\n  values: Array<Symbol>\n  nameMap: NameMap\n\n  constructor (...enumNames: Array<string | Function>)\n\n  constructor () {\n    if (arguments.length === 0) {\n      throw Error('Must provide at least one argument')\n    }\n    this.size = arguments.length\n    this.values = []\n    this.nameMap = {}\n\n    var subtract = 0\n    var SymbolMaker: Function = Symbol\n    if (!Symbol || typeof Symbol !== 'function') {\n      console.log(\"Symbol doesn't exist\")\n      if (typeof arguments[arguments.length - 1] === 'function') {\n        SymbolMaker = arguments[arguments.length - 1]\n        subtract = 1\n      } else {\n        throw Error(\"This env doesn't support Symbol. You must provide a polyfill\")\n      }\n    }\n\n    for (var i = 0; i < arguments.length - subtract; i++) {\n      var name = arguments[i]\n      if (typeof name !== 'string') {\n        throw Error('Enum names must be strings')\n      }\n      var sym = SymbolMaker(name)\n\n      Object.defineProperty(this, name, {\n        enumerable: true,\n        writable: false,\n        configurable: false,\n        value: sym\n      })\n\n      this.values.push(this[name])\n\n      this.nameMap[(sym as unknown) as string] = name\n    }\n    Object.freeze(this)\n  }\n\n  getName (sym: Symbol): string {\n    if (!this.nameMap[(sym as unknown) as string]) {\n      throw Error(\"Enum doesn't contain that member\")\n    }\n    return this.nameMap[(sym as unknown) as string]\n  }\n\n  has (key: Symbol): boolean {\n    // coerce the value to a boolean\n    return !!this.nameMap[(key as unknown) as string]\n  }\n\n  // because we're going to be accessing Enum members\n\n  [index: string]: any\n}\n"],"names":["arguments","length","Error","this","size","values","nameMap","subtract","SymbolMaker","Symbol","console","log","i","name","sym","Object","defineProperty","enumerable","writable","configurable","value","push","freeze","Glum","key"],"mappings":"6MAWE,aACE,GAAyB,IAArBA,UAAUC,OACZ,MAAMC,MAAM,sCAEdC,KAAKC,KAAOJ,UAAUC,OACtBE,KAAKE,OAAS,GACdF,KAAKG,QAAU,GAEf,IAAIC,EAAW,EACXC,EAAwBC,OAC5B,IAAKA,QAA4B,mBAAXA,OAAuB,CAE3C,GADAC,QAAQC,IAAI,wBACmC,mBAApCX,UAAUA,UAAUC,OAAS,GAItC,MAAMC,MAAM,gEAHZM,EAAcR,UAAUA,UAAUC,OAAS,GAC3CM,EAAW,EAMf,IAAK,IAAIK,EAAI,EAAGA,EAAIZ,UAAUC,OAASM,EAAUK,IAAK,CACpD,IAAIC,EAAOb,UAAUY,GACrB,GAAoB,iBAATC,EACT,MAAMX,MAAM,8BAEd,IAAIY,EAAMN,EAAYK,GAEtBE,OAAOC,eAAeb,KAAMU,EAAM,CAChCI,YAAY,EACZC,UAAU,EACVC,cAAc,EACdC,MAAON,IAGTX,KAAKE,OAAOgB,KAAKlB,KAAKU,IAEtBV,KAAKG,QAASQ,GAA6BD,EAE7CE,OAAOO,OAAOnB,MAkBlB,OAfEoB,oBAAA,SAAST,GACP,IAAKX,KAAKG,QAASQ,GACjB,MAAMZ,MAAM,oCAEd,OAAOC,KAAKG,QAASQ,IAGvBS,gBAAA,SAAKC,GAEH,QAASrB,KAAKG,QAASkB"}